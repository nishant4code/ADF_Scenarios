{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfADFPracticalImplimentation"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL5_AddAdditionalColumnDuringCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "sourceFile",
										"value": "$$FILEPATH"
									},
									{
										"name": "dup_name",
										"value": "$$COLUMN: name"
									},
									{
										"name": "pipelineName",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									{
										"name": "static",
										"value": "custom Value Enteted"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": " name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "sourceFile",
											"type": "String"
										},
										"sink": {
											"name": "sourceFile",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dup_name",
											"type": "String"
										},
										"sink": {
											"name": "dup_name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pipelineName",
											"type": "String"
										},
										"sink": {
											"name": "pipelineName",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "static",
											"type": "String"
										},
										"sink": {
											"name": "static",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Blob_input_csv_1file_PL5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Blob_outputData_outputAddColumn_PL5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL6_ConvertArrayToString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup From Email File",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_input_Blob_email_PL6",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup From Email File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup From Email File').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileNameData",
										"value": {
											"value": "@item().email",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileName",
							"value": {
								"value": "@join(variables('fileNameData'), '/')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"fileNameData": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL7_validateFileSchemaBeforeProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1 emp File",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob_input_csv_1file_PL7",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata2 Dummy_1file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob_input_csv_dumy_1file_PL7",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition- check Schema",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1 emp File",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Metadata2 Dummy_1file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\r\n    activity('Get Metadata1 emp File').output.structure,\r\n    activity('Get Metadata2 Dummy_1file').output.structure\r\n    )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1- If condition Gone False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob_input_csv_1file_PL7",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Blob_input_csv_dumy_1file_PL7",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL9_GetLatestFileFromFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob_outputData_outputSQLTable2CSV_PL9",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_outputSQLTable2CSV_para_PL9",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Get Metadata2').output.lastModified,\nvariables('lastModifiedDateDemo'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable file name",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "fileName",
													"value": {
														"value": "@activity('Get Metadata2').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set variable last modified date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileLastModifiedDate",
										"value": {
											"value": "@activity('Get Metadata2').output.lastModified",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_outputSQLTable2CSV_PL9_copy_para",
								"type": "DatasetReference",
								"parameters": {
									"fileNameDS": {
										"value": "@variables('fileName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_outputData_outputLatestcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"fileLastModifiedDate": {
						"type": "String"
					},
					"getFileName": {
						"type": "String"
					},
					"lastModifiedDateDemo": {
						"type": "String",
						"defaultValue": "2020-01-01T12:12:12Z"
					}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnPrem_SQLServer_employeeDB_para_PL8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OnPrem_SQLServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "input/onpremSQLServer"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_onPremSQLServer_PL8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OnPrem_SQLServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "input/onpremSQLServer"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SCD_Type1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_BlobSCDType1_input_csv_employee",
								"type": "DatasetReference"
							},
							"name": "sourceEmployeeCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSQL_SCD1_tbl_employee",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empid as integer,",
						"          { empname} as string,",
						"          { depid} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceEmployeeCSV",
						"sourceEmployeeCSV alterRow(upsertIf(1==1)) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          empId as integer,",
						"          empName as string,",
						"          deptId as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['empId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          empId = empid,",
						"          empName = { empname},",
						"          deptId = { depid}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SCD_Type2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Blob_SCD2_employee",
								"type": "DatasetReference"
							},
							"name": "sourceEmployeeCSV"
						},
						{
							"dataset": {
								"referenceName": "DS_AzureSqlDB_tbl_employeeSCD2",
								"type": "DatasetReference"
							},
							"name": "empTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSqlDB_tbl_employeeSCD2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_AzureSqlDB_tbl_employeeSCD2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnAddisActive"
						},
						{
							"name": "select1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "existingRows"
						},
						{
							"name": "select2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EmpID as integer,",
						"          EmpName as string,",
						"          gender as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceEmployeeCSV",
						"source(output(",
						"          surrKey as integer,",
						"          empID as integer,",
						"          empName as string,",
						"          gender as string,",
						"          country as string,",
						"          isActive as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> empTable",
						"sourceEmployeeCSV derive(isActive = 1) ~> derivedColumnAddisActive",
						"empTable select(mapColumn(",
						"          SQL_surrKey = surrKey,",
						"          SQL_empID = empID,",
						"          SQL_empName = empName,",
						"          SQL_gender = gender,",
						"          SQL_country = country,",
						"          SQL_isActive = isActive",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"sourceEmployeeCSV, select1 lookup(EmpID == SQL_empID,",
						"     multiple: true,",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 filter(!isNull(SQL_empID)) ~> existingRows",
						"existingRows select(mapColumn(",
						"          SQL_surrKey,",
						"          SQL_empID,",
						"          SQL_empName,",
						"          SQL_gender,",
						"          SQL_country,",
						"          SQL_isActive",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 derive(SQL_isActive = 0) ~> derivedColumn1",
						"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
						"derivedColumnAddisActive sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          surrKey as integer,",
						"          empID as integer,",
						"          empName as string,",
						"          gender as string,",
						"          country as string,",
						"          isActive as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          empID = EmpID,",
						"          empName = EmpName,",
						"          gender,",
						"          country,",
						"          isActive",
						"     )) ~> sink1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          surrKey as integer,",
						"          empID as integer,",
						"          empName as string,",
						"          gender as string,",
						"          country as string,",
						"          isActive as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['surrKey'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          surrKey = SQL_surrKey,",
						"          empID = SQL_empID,",
						"          empName = SQL_empName,",
						"          gender = SQL_gender,",
						"          country = SQL_country,",
						"          isActive = SQL_isActive",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL13_Execute_SP_with_outputParameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "declare @totalCount int\nexecute sp_totalEmployee 'Data Engineer', @totalCount output\nselect @totalCount as TotalEmployees",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_onPremSQLServer_PL8",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "totalEmployees",
							"value": {
								"value": "@string(activity('Lookup1').output.value[0]['TotalEmployees'])",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"totalEmployees": {
						"type": "String"
					}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onPremSQLServer_PL8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL17_ExecuteSQL_Lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from employee_info;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_onPremSQLServer_PL8",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onPremSQLServer_PL8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL1_SCDType1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SCD_Type1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceEmployeeCSV": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PL_SCD"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T19:59:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_SCD_Type1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL8_CopyMultipleTable2CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select table_name from employeeDB.INFORMATION_SCHEMA.TABLES;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_onPremSQLServer_PL8",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_OnPrem_SQLServer_employeeDB_para_PL8",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Blob_outputSQLTable2CSV_PL8",
											"type": "DatasetReference",
											"parameters": {
												"outputFileName": {
													"value": "@concat(item().table_name,'-',utcnow(),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RTS"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-02T21:03:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_onPremSQLServer_PL8')]",
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_SQLServer_employeeDB_para_PL8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduledTrigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL4_LogPipelineExecutionDetailToSQLServer",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-12-23T12:54:00",
						"endTime": "2022-12-24T12:54:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								28
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}